# OpenSSL root CA configuration file.
# Copy to `/root/ca/openssl.cnf`.

oid_section                  = new_oids

[ new_oids ]
appleWWDRRoot               = 1.2.840.113635.100.6.2.1

[ ca ]
# `man ca`
default_ca                   = CA_default

[ CA_default ]
# Directory and file locations.
dir                          = .
certs                        = $dir/certs
crl_dir                      = $dir/crl
new_certs_dir                = $dir/newcerts
database                     = $dir/index.txt
serial                       = $dir/serial
RANDFILE                     = $dir/private/.rand

# The root key and root certificate.
private_key	                 = $dir/private/FakeAppleCA.key.unencrypted.pem # The private key
certificate	                 = $dir/certs/FakeAppleCA.cert.pem 	# The CA certificate

# For certificate revocation lists.
crlnumber                    = $dir/crlnumber
crl                          = $dir/crl/ca.crl.pem
crl_extensions               = crl_ext
default_crl_days             = 30

# SHA-1 is deprecated, so useSHA-2 instead.
default_md                   = sha1

name_opt                     = ca_default
cert_opt                     = ca_default
default_days                 = 375
preserve                     = yes
policy                       = policy_strict

[ policy_strict ]
# The root CA should only sign intermediate certificates that match.
# See the POLICY FORMAT section of `man ca`.
countryName                  = match
organizationName             = match
organizationalUnitName       = supplied
commonName                   = supplied

[ policy_loose ]
# Allow the intermediate CA to sign a more diverse range of certificates.
# See the POLICY FORMAT section of the `ca` man page.
countryName                  = optional
stateOrProvinceName          = optional
localityName                 = optional
organizationName             = optional
organizationalUnitName       = optional
commonName                   = supplied
emailAddress                 = optional

[ req ]
# Options for the `req` tool (`man req`).
prompt                       = no
encrypt_key                  = no
default_bits                 = 2048
distinguished_name           = req_distinguished_name
string_mask                  = utf8only

# SHA-1 is deprecated, so useSHA-2 instead.
default_md                   = sha1

# Extension to add when the -x509 option is used.
x509_extensions              = v3_ca

[ req_distinguished_name ]
# See <https://en.wikipedia.org/wiki/Certificate_signing_request>.
countryName                 = US
organizationName            = Apple Inc.
organizationalUnitName      = Apple Certification Authority
commonName                  = Apple Root CA

[ v3_ca ]
# Extensions for a typical CA(`man x509v3_config`).
keyUsage                    = critical, keyCertSign, cRLSign
basicConstraints            = critical, CA:TRUE
subjectKeyIdentifier        = hash
authorityKeyIdentifier      = keyid:always,issuer
certificatePolicies         = @ca_polsect

[ ca_polsect ]
policyIdentifier            = 1.2.840.113635.100.5.1
CPS.1                       = "https://www.apple.com/appleca/"
userNotice.1                = @notice

[ notice ]
explicitText                = "Reliance on this certificate by any party assumes acceptance of the then applicable standard terms and conditions of use, certificate policy and certification practice statements."

[ v3_intermediate_ca ]
# Extensions for a typical intermediate CA (`man x509v3_config`).
subjectKeyIdentifier         = hash
basicConstraints             = critical, CA:TRUE
authorityKeyIdentifier       = keyid:always,issuer
crlDistributionPoints        = URI:http://crl.apple.com/root.crl
keyUsage                     = critical, digitalSignature, keyCertSign, cRLSign
appleWWDRRoot                = ASN1:NULL

[ v3_istca2g1_intermediate_ca ]
# Extensions for Apple ISTCA2G1
authorityKeyIdentifier          = keyid:always,issuer
subjectKeyIdentifier            = hash
basicConstraints                = critical, CA:TRUE, pathlen:0
keyUsage                        = critical, keyCertSign, cRLSign
crlDistributionPoints           = URI:http://g.symcb.com/crls/gtglobal.crl
authorityInfoAccess             = OCSP;URI:http://g.symcd.com
certificatePolicies             = @istca2g1_polsect

[ istca2g1_polsect ]
policyIdentifier                = 2.16.840.1.113733.1.7.54
CPS.1                           = "http://www.apple.com/certificateauthority/rpa"

[ usr_cert ]
# Extensions for client certificates (`man x509v3_config`).
basicConstraints             = CA:FALSE
nsCertType                   = client
nsComment                    = "OpenSSL Generated Client Certificate"
subjectKeyIdentifier         = hash
authorityKeyIdentifier       = keyid,issuer
keyUsage                     = critical, nonRepudiation, digitalSignature, keyEncipherment
extendedKeyUsage             = clientAuth

[ server_cert ]
# Extensions for server certificates (`man x509v3_config`).
basicConstraints             = CA:FALSE
nsCertType                   = server
nsComment                    = "OpenSSL Generated Server Certificate"
subjectKeyIdentifier         = hash
authorityKeyIdentifier       = keyid,issuer:always
keyUsage                     = critical, digitalSignature, keyEncipherment
extendedKeyUsage             = serverAuth

[ crl_ext ]
# Extension for CRLs (`man x509v3_config`).
authorityKeyIdentifier       = keyid:always

[ ocsp ]
# Extension for OCSP signing certificates (`man ocsp`).
basicConstraints             = CA:FALSE
subjectKeyIdentifier         = hash
authorityKeyIdentifier       = keyid,issuer
keyUsage                     = critical, digitalSignature
extendedKeyUsage             = critical, OCSPSigning
