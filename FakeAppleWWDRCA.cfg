# OpenSSL intermediate CA configuration file.
# Copy to `/root/ca/intermediate/openssl.cnf`.

oid_section		                = new_oids

[ new_oids ]
appleWWDRRoot                   = 1.2.840.113635.100.6.2.1

[ ca ]
# `man ca`
default_ca                      = CA_default

[ CA_default ]
# Directory and file locations.
dir                             = ./WWDRCA
certs                           = $dir/certs
crl_dir                         = $dir/crl
new_certs_dir                   = $dir/newcerts
database                        = $dir/index.txt
serial                          = $dir/serial
RANDFILE                        = $dir/private/.rand

# The root key and root certificate.
private_key	                    = $dir/private/FakeAppleWWDRCA.key.unencrypted.pem # The private key
certificate	                    = $dir/certs/FakeAppleWWDRCA.cert.pem 	# The CA certificate

# For certificate revocation lists.
crlnumber                       = $dir/crlnumber
crl                             = $dir/crl/intermediate.crl.pem
crl_extensions                  = crl_ext
default_crl_days                = 30

default_md                      = sha1

name_opt                        = ca_default
cert_opt                        = ca_default

default_days	                = 3650      	# how long to certify for
default_md	                    = sha1    			# which md to use.
preserve	                    = yes			# keep passed DN ordering
policy                          = policy_strict

[ policy_strict ]
# The root CA should only sign intermediate certificates that match.
# See the POLICY FORMAT section of `man ca`.
countryName		                = match
organizationName	            = match
organizationalUnitName	        = supplied
commonName		                = supplied

[ policy_loose ]
# Allow the intermediate CA to sign a more diverse range of certificates.
# See the POLICY FORMAT section of the `ca` man page.
countryName                     = optional
stateOrProvinceName             = optional
localityName                    = optional
organizationName                = optional
organizationalUnitName          = optional
commonName                      = supplied
emailAddress                    = optional

[ req ]
# Options for the `req` tool (`man req`).
prompt                          = no
encrypt_key                     = no
default_bits                    = 2048
distinguished_name              = req_distinguished_name
string_mask                     = utf8only

default_md                      = sha1

# Extension to add when the -x509 option is used.
x509_extensions                 = v3_ca

[ req_distinguished_name ]
# See <https://en.wikipedia.org/wiki/Certificate_signing_request>.
countryName                     = US
organizationName                = Apple Inc.
organizationalUnitName          = Apple Worldwide Developer Relations
commonName                      = Apple Worldwide Developer Relations Certification Authority

[ v3_ca ]
# Extensions for a typical CA (`man x509v3_config`).
subjectKeyIdentifier            = hash
basicConstraints                = critical, CA:true
authorityKeyIdentifier          = keyid:always,issuer
keyUsage                        = critical, digitalSignature, keyCertSign, cRLSign

[ v3_intermediate_ca ]
# Extensions for a typical intermediate CA (`man x509v3_config`).
subjectKeyIdentifier            = hash
basicConstraints                = critical, CA:TRUE
authorityKeyIdentifier          = keyid:always,issuer
keyUsage                        = critical, digitalSignature, keyCertSign, cRLSign
crlDistributionPoints           = URI:http://crl.apple.com/root.crl
appleWWDRRoot                   = ASN1:NULL

[ usr_cert ]
# Extensions for client certificates (`man x509v3_config`).
basicConstraints                = CA:FALSE
nsCertType                      = client, email
nsComment                       = "OpenSSL Generated Client Certificate"
subjectKeyIdentifier            = hash
authorityKeyIdentifier          = keyid,issuer
keyUsage                        = critical, nonRepudiation, digitalSignature, keyEncipherment
extendedKeyUsage                = clientAuth, emailProtection

[ server_cert ]
# Extensions for server certificates (`man x509v3_config`).
basicConstraints                = CA:FALSE
nsCertType                      = server
nsComment                       = "OpenSSL Generated Server Certificate"
subjectKeyIdentifier            = hash
authorityKeyIdentifier          = keyid,issuer:always
keyUsage                        = critical, digitalSignature, keyEncipherment
extendedKeyUsage                = serverAuth

[ crl_ext ]
# Extension for CRLs (`man x509v3_config`).
authorityKeyIdentifier          =keyid:always

[ ocsp ]
# Extension for OCSP signing certificates (`man ocsp`).
basicConstraints                = CA:FALSE
subjectKeyIdentifier            = hash
authorityKeyIdentifier          = keyid,issuer
keyUsage                        = critical, digitalSignature
extendedKeyUsage                = critical, OCSPSigning
